---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: terraform-aws-helm-release

# Logo for this project
#logo: docs/logo.png

# License of this project
license: "APACHE2"

# Copyrights
copyrights:
  - name: "Cloud Posse, LLC"
    url: "https://cloudposse.com"
    year: "2021"

# Canonical GitHub repo
github_repo: cloudposse/terraform-aws-helm-release

# Badges to display
badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/cloudposse/terraform-aws-helm-release.svg"
    url: "https://github.com/cloudposse/terraform-aws-helm-release/releases/latest"
  - name: "Slack Community"
    image: "https://slack.cloudposse.com/badge.svg"
    url: "https://slack.cloudposse.com"
  - name: "Discourse Forum"
    image: "https://img.shields.io/discourse/https/ask.sweetops.com/posts.svg"
    url: "https://ask.sweetops.com/"

# List any related terraform modules that this module may be used with or that this module depends on.
related:
  - name: "terraform-null-label"
    description: "Terraform module designed to generate consistent names and tags for resources. Use terraform-null-label to implement a strict naming convention."
    url: "https://github.com/cloudposse/terraform-null-label"

# List any resources helpful for someone to get started. For example, link to the hashicorp documentation or AWS documentation.
references:
  - name: "Terraform Standard Module Structure"
    description: "HashiCorp's standard module structure is a file and directory layout we recommend for reusable modules distributed in separate repositories."
    url: "https://www.terraform.io/docs/modules/index.html#standard-module-structure"
  - name: "Terraform Module Requirements"
    description: "HashiCorp's guidance on all the requirements for publishing a module. Meeting the requirements for publishing a module is extremely easy."
    url: "https://www.terraform.io/docs/registry/modules/publish.html#requirements"
  - name: "Terraform Version Pinning"
    description: "The required_version setting can be used to constrain which versions of the Terraform CLI can be used with your configuration"
    url: "https://www.terraform.io/docs/configuration/terraform.html#specifying-a-required-terraform-version"

# Short description of this project
description: |-
  This `terraform-aws-helm-release` module creates a helm chart with an option to create an EKS IAM role.

# Introduction to the project
#introduction: |-
#  This is an introduction.

# How to use this module. Should be an easy example to copy and paste.
usage: |-
  For a complete example, see [examples/complete](examples/complete).

  For automated tests of the complete example using [bats](https://github.com/bats-core/bats-core) and [Terratest](https://github.com/gruntwork-io/terratest)
  (which tests and deploys the example on AWS), see [test](test).

  ```hcl
  module "helm_release" {
    source  = "cloudposse/helm-release/aws"
    # Cloud Posse recommends pinning every module to a specific version
    # version = "x.x.x"

    name = "echo"

    repository    = "https://charts.helm.sh/incubator"
    chart         = "raw"
    chart_version = "0.2.5"

    create_namespace     = true
    kubernetes_namespace = "echo"

    atomic          = true
    cleanup_on_fail = true
    timeout         = 300
    wait            = true

    # These values will be deep merged
    # values = [
    # ]

    # Dictates which ServiceAccounts are allowed to assume the IAM Role.
    # In this case, only the "echo" ServiceAccount in the "echo" namespace
    # will be able to assume the IAM Role created by this module.
    service_account_name      = "echo"
    service_account_namespace = "echo"

    iam_role_enabled = true

    iam_policy_statements = [
      {
        sid        = "ListMyBucket"
        effect     = "Allow"
        actions    = ["s3:ListBucket"]
        resources  = ["arn:aws:s3:::test"]
        conditions = []
      },
      {
        sid        = "WriteMyBucket"
        effect     = "Allow"
        actions    = ["s3:PutObject", "s3:GetObject", "s3:DeleteObject"]
        resources  = ["arn:aws:s3:::test/*"]
        conditions = []
      },
    ]
  }
  ```

  If `var.service_account_name` is set, then `var.name` can be set to "" in order to achieve a shorter name for the IAM
  Role created for the ServiceAccount:

  ```hcl
  module "helm_release" {
    source  = "cloudposse/helm-release/aws"
    # Cloud Posse recommends pinning every module to a specific version
    # version = "x.x.x"

    name = ""

    create_namespace     = true
    kubernetes_namespace = "echo"

    service_account_name      = "echo"
    service_account_namespace = "echo"

    iam_role_enabled = true
    ...
  }
  ```

  This will result in an IAM role with a name such as: `eg-uw2-dev-echo@kube-system` instead of `eg-uw2-dev-echo-echo@kube-system`.
  Additionally, if `var.name` is empty, the name used for the Helm Release will be that of `var.chart`.

# Example usage
examples: |-
  Here is an example of using this module:
  - [`examples/complete`](https://github.com/cloudposse/terraform-aws-helm-release/) - complete example of using this module

# How to get started quickly
#quickstart: |-
#  Here's how to get started...

# Other files to include in this README from the project folder
include:
  - "docs/targets.md"
  - "docs/terraform.md"

# Contributors to this project
contributors:
  - name: "Erik Osterman"
    github: "osterman"
  - name: "RB"
    github: "nitrocode"
